apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EUXlPREUxTWpBek5Gb1hEVE14TURReU5qRTFNakF6TkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnBnCm9yd3EzMDBJVVRKVkFZUVYzSHJieWxjdnFPTDRSUWlIVVdhaTY0UXBzR1RwTytvNHZMd1Y0MUE3enRxVFFLM28KaUcxR2pJUDBsRkdQYXJzNXFCNkU5MkRMK2hJU2kyaFM2THJtdHI3YlVua2NKb0Z4K0djbk5JUHcxUXpjNlRhUgpoK0NpQmZKVVEzU3V4YTVGaW5wTVlYcGFqVkRVY3ZZQWJBTUMvMnFDaFhaOU82d1RjRE5LUzZoT3V6emcxaWpCClc5cUhRdXBQTFpmeDdDSk1LVEhjTG9QaEoyS29jU2tQMUpvQWIzdzNlcTF2bFcwV1BVVzBaZ3gxeWx1OU11M3cKU2ZGdStOaDJnaExJMGNzMUFHZlFGL1lKaE5XSWhCZHIvR0k2Yk5XRkJ4b1ZoaVZKazhuMUZYbHQ5U0ttY0taRgpRY3BEaDVHaXVNanZ1OEhTZWRNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMTWhMOWQwMXpjWUJ6SGZMWHJCMU1ndzFqUHlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBZEhvQzlxZkRWSDl4OGJkdnZkVjIwekJOaGpyTDVWaVMxVkZBSkZaeVhMNEwwRmJpdApOTUxYRllIbEJsd3lmS2I5eER2Mzhhd1BkK1lLVWVib0tqY0NXYXVLNnNEc2pxOTltQ3p0Y3haV3RJL1RKQXM5Ckg1MGp5eCtCUnZyWGZZZEQyOXRJWHVBRDJVQmVmNk9kSmVPNnV2Mlh0V3l4UkZwbW1YNjFQdGtCL1c1RVB2VFIKbG4ySTVrb1hZOTZBakpqTWZnVkpKdUZYWjAyWUdnT3ZGaHQ4MitlMUgxY2pGdWIzbkVQTzVGZjA4bWdXdGU3Zwo1Vi8xNWhQRlZDM25iNkt4cmNydkxmTnJEZERJNGtaTlVHL0dRNDZqZXBUbVVUaFNuRGd5WlpWakllY1JHU0NWCldJNW91WU83WEx1NnQvZVZ5S1IrMVNZSUtEN2E1Wk15UDdmcgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    namespace: cG93ZXJtYXg=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluVkpORjl6TXpsYVQxSk9XUzFQT0U1NmFuQlVaWEJWVFV0QlZrVlhVR1pGUjI5TmJXOTNhMWswY1UwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YjNkbGNtMWhlQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUprWldaaGRXeDBMWFJ2YTJWdUxXdzRlRFF5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW1SbFptRjFiSFFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUkxT0RSaVlqUTBNUzAzTVRNM0xUUTJOR1V0WWpsa01pMDVaR0prWlRabU56Z3lNREFpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNmNHOTNaWEp0WVhnNlpHVm1ZWFZzZENKOS5RUm9OcUlnVF82cGdxZ0JTSXlFeTllOGRsYlhONUlqRnQ5bGE0U1oyZS1kRDRLMlNZVkNObnFPdGtjNlFoRDlTT0tVOEkyUHhUN1RIOU1YWW9wd09oamNnYWdGajZxTkk4a0ItVDkwY3RrbjJYeUpkSzI0Q0p2bFFYanY5Z2hFOHJfWVptN0FiM0ljb05hSk9KTGJuZFY3cDhHVnJDVkk2RUpNQnRnb2ZZLTRtTDNqSnl3SDlTOTZzeUtmVS1keWtrdTIzRldoaTk1V2laRE8tbjVvXzF5OXp2N0FjVkl5ZTBIOXhOTkJOdTVUbmFRb0NidU9GdFhYdVdpcS1XQWlfazN2NDRLU3BnT0gzYk9famxvZ0E5WFlJd1dOVDdZT05qMFRxMTVmQlJ5WUpNMzJNcmRrdEFGQ0dScUJRWlpadUJQQ1BPT2hhOHItQ2xSU09yNHNNNkE=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 584bb441-7137-464e-b9d2-9dbde6f78200
    creationTimestamp: "2021-04-28T15:49:15Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-04-28T15:49:15Z"
    name: default-token-l8x42
    namespace: powermax
    resourceVersion: "3224"
    uid: 59071f98-f54e-44bb-b7fb-7f509958ca31
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EUXlPREUxTWpBek5Gb1hEVE14TURReU5qRTFNakF6TkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnBnCm9yd3EzMDBJVVRKVkFZUVYzSHJieWxjdnFPTDRSUWlIVVdhaTY0UXBzR1RwTytvNHZMd1Y0MUE3enRxVFFLM28KaUcxR2pJUDBsRkdQYXJzNXFCNkU5MkRMK2hJU2kyaFM2THJtdHI3YlVua2NKb0Z4K0djbk5JUHcxUXpjNlRhUgpoK0NpQmZKVVEzU3V4YTVGaW5wTVlYcGFqVkRVY3ZZQWJBTUMvMnFDaFhaOU82d1RjRE5LUzZoT3V6emcxaWpCClc5cUhRdXBQTFpmeDdDSk1LVEhjTG9QaEoyS29jU2tQMUpvQWIzdzNlcTF2bFcwV1BVVzBaZ3gxeWx1OU11M3cKU2ZGdStOaDJnaExJMGNzMUFHZlFGL1lKaE5XSWhCZHIvR0k2Yk5XRkJ4b1ZoaVZKazhuMUZYbHQ5U0ttY0taRgpRY3BEaDVHaXVNanZ1OEhTZWRNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMTWhMOWQwMXpjWUJ6SGZMWHJCMU1ndzFqUHlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBZEhvQzlxZkRWSDl4OGJkdnZkVjIwekJOaGpyTDVWaVMxVkZBSkZaeVhMNEwwRmJpdApOTUxYRllIbEJsd3lmS2I5eER2Mzhhd1BkK1lLVWVib0tqY0NXYXVLNnNEc2pxOTltQ3p0Y3haV3RJL1RKQXM5Ckg1MGp5eCtCUnZyWGZZZEQyOXRJWHVBRDJVQmVmNk9kSmVPNnV2Mlh0V3l4UkZwbW1YNjFQdGtCL1c1RVB2VFIKbG4ySTVrb1hZOTZBakpqTWZnVkpKdUZYWjAyWUdnT3ZGaHQ4MitlMUgxY2pGdWIzbkVQTzVGZjA4bWdXdGU3Zwo1Vi8xNWhQRlZDM25iNkt4cmNydkxmTnJEZERJNGtaTlVHL0dRNDZqZXBUbVVUaFNuRGd5WlpWakllY1JHU0NWCldJNW91WU83WEx1NnQvZVZ5S1IrMVNZSUtEN2E1Wk15UDdmcgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    namespace: cG93ZXJtYXg=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluVkpORjl6TXpsYVQxSk9XUzFQT0U1NmFuQlVaWEJWVFV0QlZrVlhVR1pGUjI5TmJXOTNhMWswY1UwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YjNkbGNtMWhlQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUp3YjNkbGNtMWhlQzFqYjI1MGNtOXNiR1Z5TFhSdmEyVnVMV1kwTlRWa0lpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVibUZ0WlNJNkluQnZkMlZ5YldGNExXTnZiblJ5YjJ4c1pYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSXhZVGMwWTJaak1pMDBOMlJpTFRSbE9UTXRPREZqTkMwNU1ETTFZbU5tTlRaaU9EVWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2Y0c5M1pYSnRZWGc2Y0c5M1pYSnRZWGd0WTI5dWRISnZiR3hsY2lKOS5zWDhsSFhsRlVPaHZ5Q3dfQzVydzZmMm82YWQxZ1ZveFA4Vl9Nd3cwQTdIdTVUTnlpV3lJVVNVLUo5MVdMZzU1b1oyZERHZmhfejBnVFk4YUtMTDMxekdQVUlPLXRzMlBWT3hKOUUyQTJxSFcyTGFRYndIOEF0UmRneWNPUjdndGVueWpua0FIV0JTb1Azel9PUHd2UVlrcm5BX0oyVE1vVlNETzJYWHB2X2RQOFA3Q2FxMmtPalpCUHc5X3VtUHFFSHZpcFNLUk5NN3JwQlBrclNxdE1aOVptVGVZeGhxWVlIS0RLR0Q1eUdXTU45eUQ0emRXS0p1T1N6VElaanQ2S2txam9DRDZkSmlnNFRpOUhNRG1RaS01UXh4ZU04aGVmM2ZCbGtZYjNxX2FBcW9Fa3hWZm5XS2J4bDJta1Vyc3JUVFdnWWlGV2R1RGlXR0pBdFJ2elE=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: powermax-controller
      kubernetes.io/service-account.uid: 1a74cfc2-47db-4e93-81c4-9035bcf56b85
    creationTimestamp: "2021-04-28T15:49:35Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-04-28T15:49:35Z"
    name: powermax-controller-token-f455d
    namespace: powermax
    resourceVersion: "3299"
    uid: d9fe0869-e178-4826-b048-796ff58700e8
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    password: password
    username: username
  kind: Secret
  metadata:
    creationTimestamp: "2021-04-28T15:49:31Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:password: {}
          f:username: {}
        f:type: {}
      manager: kubectl-create
      operation: Update
      time: "2021-04-28T15:49:31Z"
    name: powermax-creds
    namespace: powermax
    resourceVersion: "3288"
    uid: 2c206bdd-6714-46a5-8ab0-3d18141a5975
  type: Opaque
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2021-04-28T15:49:35Z"
    labels:
      modifiedAt: "1619639247"
      name: powermax
      owner: helm
      status: deployed
      version: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:release: {}
        f:metadata:
          f:labels:
            .: {}
            f:modifiedAt: {}
            f:name: {}
            f:owner: {}
            f:status: {}
            f:version: {}
        f:type: {}
      manager: helm
      operation: Update
      time: "2021-04-28T15:49:35Z"
    name: sh.helm.release.v1.powermax.v1
    namespace: powermax
    resourceVersion: "3308"
    uid: be2111ef-7be4-4f92-a952-1d3b65cb0559
  type: helm.sh/release.v1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: powermax
      meta.helm.sh/release-namespace: powermax
    creationTimestamp: "2021-04-28T15:49:35Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"attacher"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"driver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CSI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SSL_CERT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_GRPC_MAX_THREADS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_MODIFY_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_NODENAME_TEMPLATE"}:
                      .: {}
                      f:name: {}
                    k:{"name":"X_CSI_K8S_CLUSTER_PREFIX"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ARRAYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DRIVER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_POWERMAX_PORTGROUPS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_PROXY_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_POWERMAX_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_ReplicationContextPrefix"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_ReplicationPrefix"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_TRANSPORT_PROTOCOL"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"provisioner"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"resizer"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"snapshotter"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"socket-dir"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: Go-http-client
      operation: Update
      time: "2021-04-28T15:49:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-04-28T15:50:41Z"
    name: powermax-controller
    namespace: powermax
    resourceVersion: "3520"
    uid: c6008a28-f3d9-4eff-97e8-832ee478c428
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: powermax-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: powermax-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - powermax-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          - --timeout=180s
          - --worker-threads=6
          - --leader-election
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --volume-name-prefix=pmax
          - --volume-name-uuid-length=10
          - --timeout=180s
          - --worker-threads=6
          - --v=5
          - --default-fstype=ext4
          - --leader-election
          - --extra-create-metadata
          - --feature-gates=Topology=true
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0
          imagePullPolicy: IfNotPresent
          name: provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          - --snapshot-name-prefix=pmsn
          - --snapshot-name-uuid-length=10
          - --timeout=180s
          - --leader-election
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v4.0.0
          imagePullPolicy: IfNotPresent
          name: snapshotter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --timeout=180s
          - --v=5
          - --leader-election
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: quay.io/k8scsi/csi-resizer:v1.1.0
          imagePullPolicy: IfNotPresent
          name: resizer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --leader-election
          command:
          - /csi-powermax.sh
          env:
          - name: X_CSI_POWERMAX_DRIVER_NAME
            value: csi-powermax.dellemc.com
          - name: CSI_ENDPOINT
            value: /var/run/csi/csi.sock
          - name: X_CSI_MODE
            value: controller
          - name: X_CSI_DEBUG
            value: "true"
          - name: X_CSI_POWERMAX_ENDPOINT
            value: https://10.0.0.1
          - name: X_CSI_POWERMAX_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: powermax-creds
          - name: X_CSI_POWERMAX_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: powermax-creds
          - name: X_CSI_POWERMAX_VERSION
            value: "90"
          - name: X_CSI_POWERMAX_DEBUG
            value: "false"
          - name: X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION
            value: "true"
          - name: X_CSI_POWERMAX_INSECURE
            value: none
          - name: X_CSI_POWERMAX_PROXY_SERVICE_NAME
            value: none
          - name: X_CSI_POWERMAX_PORTGROUPS
            value: iscsi_csm_cicd
          - name: X_CSI_K8S_CLUSTER_PREFIX
            value: CSM
          - name: X_CSI_POWERMAX_ARRAYS
            value: "1234567890"
          - name: X_CSI_GRPC_MAX_THREADS
            value: "4"
          - name: X_CSI_TRANSPORT_PROTOCOL
          - name: SSL_CERT_DIR
            value: /certs
          - name: X_CSI_IG_NODENAME_TEMPLATE
          - name: X_CSI_IG_MODIFY_HOSTNAME
            value: "false"
          - name: X_CSI_ReplicationContextPrefix
            value: powermax/
          - name: X_CSI_ReplicationPrefix
            value: replication.storage.dell.com/
          image: dellemc/csi-powermax:v1.6.0
          imagePullPolicy: Always
          name: driver
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
          - mountPath: /certs
            name: certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: powermax-controller
        serviceAccountName: powermax-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - name: certs
          secret:
            defaultMode: 420
            optional: true
            secretName: powermax-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2021-04-28T15:50:41Z"
      lastUpdateTime: "2021-04-28T15:50:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-04-28T15:49:35Z"
      lastUpdateTime: "2021-04-28T15:50:41Z"
      message: ReplicaSet "powermax-controller-5748dddb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: powermax
      meta.helm.sh/release-namespace: powermax
    creationTimestamp: "2021-04-28T15:49:35Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"driver"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CSI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SSL_CERT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_GRPC_MAX_THREADS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_MODIFY_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_NODENAME_TEMPLATE"}:
                      .: {}
                      f:name: {}
                    k:{"name":"X_CSI_ISCSI_CHROOT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_K8S_CLUSTER_PREFIX"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ARRAYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DRIVER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ISCSI_ENABLE_CHAP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_NODENAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"X_CSI_POWERMAX_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_POWERMAX_PORTGROUPS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_PROXY_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_PRIVATE_MOUNT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_TRANSPORT_PROTOCOL"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/noderoot"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/run/dbus/system_bus_socket"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/sys"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/plugins/powermax.emc.dell.com"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/pods"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                k:{"name":"registrar"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBE_NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/registration"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostIPC: {}
              f:hostNetwork: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"dbus-socket"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"dev"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"driver-path"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"noderoot"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"pods-path"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"registration-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"sys"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"volumedevices-path"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: Go-http-client
      operation: Update
      time: "2021-04-28T15:49:35Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-04-28T15:58:08Z"
    name: powermax-node
    namespace: powermax
    resourceVersion: "5022"
    uid: 2f56ff2e-5e99-4557-9572-dad4126e30f3
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: powermax-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: powermax-node
      spec:
        containers:
        - command:
          - /csi-powermax.sh
          env:
          - name: X_CSI_POWERMAX_DRIVER_NAME
            value: csi-powermax.dellemc.com
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/powermax.emc.dell.com/csi_sock
          - name: X_CSI_MODE
            value: node
          - name: X_CSI_DEBUG
            value: "true"
          - name: X_CSI_PRIVATE_MOUNT_DIR
            value: /var/lib/kubelet/plugins/powermax.emc.dell.com/disks
          - name: X_CSI_POWERMAX_ENDPOINT
            value: https://10.0.0.1
          - name: X_CSI_POWERMAX_DEBUG
            value: "false"
          - name: X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION
            value: "true"
          - name: X_CSI_POWERMAX_INSECURE
            value: none
          - name: X_CSI_K8S_CLUSTER_PREFIX
            value: CSM
          - name: X_CSI_POWERMAX_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: powermax-creds
          - name: X_CSI_POWERMAX_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: powermax-creds
          - name: X_CSI_POWERMAX_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: X_CSI_POWERMAX_ISCSI_ENABLE_CHAP
            value: "false"
          - name: X_CSI_POWERMAX_ARRAYS
            value: "1234567890"
          - name: X_CSI_POWERMAX_PROXY_SERVICE_NAME
            value: none
          - name: X_CSI_ISCSI_CHROOT
            value: /noderoot
          - name: X_CSI_GRPC_MAX_THREADS
            value: "4"
          - name: X_CSI_TRANSPORT_PROTOCOL
          - name: SSL_CERT_DIR
            value: /certs
          - name: X_CSI_IG_NODENAME_TEMPLATE
          - name: X_CSI_IG_MODIFY_HOSTNAME
            value: "false"
          - name: X_CSI_POWERMAX_PORTGROUPS
            value: iscsi_csm_cicd
          image: dellemc/csi-powermax:v1.6.0
          imagePullPolicy: Always
          name: driver
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/powermax.emc.dell.com
            name: driver-path
          - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices
            mountPropagation: Bidirectional
            name: volumedevices-path
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: pods-path
          - mountPath: /dev
            name: dev
          - mountPath: /sys
            name: sys
          - mountPath: /noderoot
            name: noderoot
          - mountPath: /certs
            name: certs
            readOnly: true
          - mountPath: /run/dbus/system_bus_socket
            name: dbus-socket
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=/var/lib/kubelet/plugins/powermax.emc.dell.com/csi_sock
          env:
          - name: ADDRESS
            value: /csi/csi_sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /registration
            name: registration-dir
          - mountPath: /csi
            name: driver-path
        dnsPolicy: ClusterFirstWithHostNet
        hostIPC: true
        hostNetwork: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/memory-pressure
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/disk-pressure
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/network-unavailable
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/powermax.emc.dell.com
            type: DirectoryOrCreate
          name: driver-path
        - hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices
            type: DirectoryOrCreate
          name: volumedevices-path
        - hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
          name: pods-path
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /
            type: Directory
          name: noderoot
        - hostPath:
            path: /run/dbus/system_bus_socket
            type: Socket
          name: dbus-socket
        - name: certs
          secret:
            defaultMode: 420
            optional: true
            secretName: powermax-certs
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""