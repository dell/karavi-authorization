apiVersion: v1
items:
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lKQU5LZXJJeGdwNG9ETUEwR0NTcUdTSWIzRFFFQkN3VUFNRUl4Q3pBSkJnTlYKQkFZVEFsaFlNUlV3RXdZRFZRUUhEQXhFWldaaGRXeDBJRU5wZEhreEhEQWFCZ05WQkFvTUUwUmxabUYxYkhRZwpRMjl0Y0dGdWVTQk1kR1F3SGhjTk1qRXdOVEV5TVRreU1ETTVXaGNOTXpFd05URXdNVGt5TURNNVdqQkNNUXN3CkNRWURWUVFHRXdKWVdERVZNQk1HQTFVRUJ3d01SR1ZtWVhWc2RDQkRhWFI1TVJ3d0dnWURWUVFLREJORVpXWmgKZFd4MElFTnZiWEJoYm5rZ1RIUmtNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQQp2V2tFbmRkMEZDL09UNGlDMmFYQWpSZkpuS3JUeUJ5cm5pOVl3N3h3U3ZPRyszdmFaME9US1pNZWkwMG1keHJOClZTcFlTdVg5UTIyakQvQytCVmNuV0p2STdQRzB6VWJnZ0ZzYXV6d0Nnd3pqbWFnakFYUWpEU3RCeTUvZzBwSFMKTUdFVDRuMHVXYlQ0cnVjZThEOStBQ2cyMWVOaG10Q3RjMm8vWEI4RFZyckpCNHlwVk5Pd2sxOU9KTWQ2TVhHQwo0THBQTUVqWE9MWXFUVEVaaUp1b1hMcnBrY3Qyc3A4dVNFTE16NDdHTFFIRHB4Ny83d0wwRlo2Z3BqT3dzMWNqClBEbG9qdi9TWWYrVzdiMENjRVVhd1JIQlYyc0I0RG9BdHZmRGlkUW8wSUhqTy9CSVJlQ21BcHlsbXB3UnNQeXAKK1pRMmtKSWhzL25ZSWI3aGhBWXFrd0lEQVFBQm8xQXdUakFkQmdOVkhRNEVGZ1FVaXc0ajJyRlQ3NHUrMVROSgpuM0kreWNGd1B1MHdId1lEVlIwakJCZ3dGb0FVaXc0ajJyRlQ3NHUrMVROSm4zSSt5Y0Z3UHUwd0RBWURWUjBUCkJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXVmSUpwNHJvaW5XaVdibUVERmxhWUN5ejBvZWEKN2Nja1ZZclFUNHV5c2NwMGwzODdlSXBPSkZOKzdPcFlHQ1daWTFPVWtuUDV1YTF4NVFIQlBJTEVLVkEwaE1LYwp1SThPQ2cxNDM2QTBtRkl6RHd5U2xsNUlPTkFnblVKbVpuZ3FmNWduKzVSbTIxTytadEd6RGFyWVk5K1NRam5ECnB3ZWdXVUY3NU5sSmJ0empMV2haRFpiRkZrR0ZLL2pJcWxHYVRvemtXbWZVaTEwazQ4SXZUMFA3bURGZHNyak8KU3d6T0Z4c2tMUy9XWFNyUGxmQlJXd0N4eEh4K2wyNmFia0ZlUGxHN0pzaWJEeklvN3hYUkJBYTBmR2ZPQmx2WApzVHpnMWNyeUttaWxCQjBnOTlZUGFLN2w3cTkxcTdTeHlWaURqSllGbTJtY21hS0htZnpJZk5NMmNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdldrRW5kZDBGQy9PVDRpQzJhWEFqUmZKbktyVHlCeXJuaTlZdzd4d1N2T0crM3ZhClowT1RLWk1laTAwbWR4ck5WU3BZU3VYOVEyMmpEL0MrQlZjbldKdkk3UEcwelViZ2dGc2F1endDZ3d6am1hZ2oKQVhRakRTdEJ5NS9nMHBIU01HRVQ0bjB1V2JUNHJ1Y2U4RDkrQUNnMjFlTmhtdEN0YzJvL1hCOERWcnJKQjR5cApWTk93azE5T0pNZDZNWEdDNExwUE1FalhPTFlxVFRFWmlKdW9YTHJwa2N0MnNwOHVTRUxNejQ3R0xRSERweDcvCjd3TDBGWjZncGpPd3MxY2pQRGxvanYvU1lmK1c3YjBDY0VVYXdSSEJWMnNCNERvQXR2ZkRpZFFvMElIak8vQkkKUmVDbUFweWxtcHdSc1B5cCtaUTJrSklocy9uWUliN2hoQVlxa3dJREFRQUJBb0lCQUQxNUZneDhYcW9ta2RqeQpQeldRUEJ3T3VscGtmdk9WaW9WK2JGcXFqKzlqZGsyc2RzZkpBTHdmaVd4QWo5bGNFNFF1aUJWVzY0bTB6WlZnCjF1czR6QVpRR1RmOWdtYVZPRXV3UmM2NnZUMzNNdTh0eUo2eUtLWWZnZTBxYUhjdTZIN1hJdk1CR2NmM21qWjUKd0dyTTBJSVFpeXVEN3F1bVNvVUkyS04zVlVnU0svZnpBOHd0NzVlNjJVL2xWSDkzS0hRRFN5azhBdTliUEQrLwpkVFcvdkxzNmQzSFFGS3NlMSthVzRyQWF3Qi8yTkI5cXFIckp6S0lubjFvR1ZsMWhqUiswcWNoS3lOcWZ3VHNFCjg2Zlo4a201NkdKVTJHTmVtSXVxSERHbm0yUmpsV3p6ZEJTNGVlaFJvKzBqVGg3VE9haHp2R2h2RDdOWVRXRG0Kc1B5Z0I1RUNnWUVBNmI2TWI5WGJWU1doZGVsb0ozb1B6cGVaSTVvelNJNWJRdGlERHJHNkp6dmIwbFgwMnIxawoxcndxUGVKVmdjdkF0WjQ1bCtVc1k0UmJCWGxTVlFsNDh2ZWR1Unl5VkFrWWFyMzlLaE9waGlJcGdVYkE3V2VSClhLQVV3dmRvekpyeXpabU1SbEliOHJ3RzBWcGNKU2lyN3dta2ZwMGxnNDk3UVJla1NaMmRtbmNDZ1lFQXozSFcKbTZ0SjlrNzVFbTJCWjAvYXZJMVo1SDh6dzlLbUQxcTcvZ1RTWitQUDBrUUJGdXl3TzFGNDh2clVzWnVOSHAvagpFcDJQdEk0SkVmOE5UdEFTQWlISGdHWThiK2xaT1pYREZqRVJOMUxjOVp2emZVQjIwR2JlU1RMSkxadGVsUzY5Cm95Z2QrVW8vNUJyTnd3NUg2Z3lLWkRSSGVVN3V0TWI5NXNwYVc4VUNnWUVBeVQvQVZvSEFpRDBRR1I5UEI3NDIKWWQ5d2dKREJXdFVHaWpVMEViQy80QXZQcGZkUURBMUpCd0dYTlJUc0hnYTU4eVU1M1NmNTRlMFJHVk50cWIydwpIekZHNFJ4dUJhQ1hIMEJZK3FOWE1CKzFzSktraFVMSWl3RmhIc1E1dlFBajBSVkZDejZpeFlsU0xXb3BMKzBtCnEzYVg1Rk9VK3dMTVVpenl6RmNpWE4wQ2dZRUFvVFdFWThFL1h5eU1IeWYrY2p6NmJhRWpoSkRkdDRaU0NvaW0KbzRjM3hBaWtEbkZPcjNRTW1HeCtJOFdOMk9CYlVMdE1DY0ZzVmhJek5rc1JHbmhVSmxmOTQraVBleURLZUJmTQpYY2lQNm9CNHVsNFJZUHJoMnA2MmpBZnRrNFcwZ1JhcnhNbCtVYWJEOUE1b2JQY0NKLzdLNVloREt5Q09IT3F2CmtkVWJWMGtDZ1lBb0NOOVAwZ1NwZU83Y1lBVVJKQ1lNNjE1aFBFMWJPOHVpUHlzYzd1R1BrUmZha0VabW5IUy8KWHNEZi8rNC8vMGZXaWRlSXBLeUdrREVudHhldmhYeVFkOXhQelVVbGpHK1VCcS8xRzAvcnRZaDhLWVBIYXdnaQpFOWJMc04yQmN5SVhFbVR1dStYNXNTSWxIS2V5cUE2djc4c3RFbUFrcVJoT2NYZmswQ1ZHc2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  kind: Secret
  metadata:
    creationTimestamp: "2021-05-12T15:23:50Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:type: {}
      manager: kubectl-create
      operation: Update
      time: "2021-05-12T15:23:50Z"
    name: csirevproxy-tls-secret
    namespace: powermax
    resourceVersion: "1769681"
    selfLink: /api/v1/namespaces/powermax/secrets/csirevproxy-tls-secret
    uid: 5ce8b17f-3a3b-4ddd-97f5-ee050b0eb83c
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOVEUxTWpFeE5Wb1hEVE14TURVd016RTFNakV4TlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlNKCklQNWpkMzZ4bU5sZUs3MzJjU1BiczlrbGNNUnM3bDFNNVBpZkZHWDVwR05zRVpnc00rV3BGSEpCUEhLWmFlNEcKTlNhK2o1WnNqY2VMclBabmt3bnRUSHkyMGp4d0JRcVJjUEh1ZXF4bHNNaSswaXh5bVd3U1JDMHR3bHN5NWdGegpJU2M3UW1odEwxQjFnVVA3WHd0MkR5cmdPMHpuT21vSGwrRUl3bk5ORUhCbjZTSWxPbUd6bXFIcC9Qbzl5UkRrCnJhTXQwUXhRSGVPOXdJcWRaOC9pdEI2SWhha01zKzBsQ2hZWHlJSFJrakVQUWVmOEkzdUpTbjdpalV5cDBSdWEKSlB0aVBNd2JZdGUrd1lmL0hQVjcvTlhtVEx0ajV4SGlLSkNhaDRxd2pjZGxvNHNEQzNGT0pWZjJnWVRaN3RTSQpyVlRwd1dvc0FzU1lkQlhjbkJjQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHbE5SQURJRW1jbk5CY0h4cUZRK0c2ZnpyejEKUzVZRjBMdW42TEduN3pkQS9uYjgxZkZJYldhb010VFBNcjJQSXdTT0xyaStqTGwwS0dnVm1JZ0tjcjEwSkpWNgpKYUVhdERUdmFpa2haazZ6bC81WnZiZ3FtT1RMRGhtMmJJS0Z0NDQ2OHMyZ3ZZbmNoVVRzYVFXR2owMHZQSGk1ClA0RjdUSGhlcnlaNDZ6dkV2RjNIb0pIUmVSdWdTbDJianFDc3hsWDVINlRqVXJGT2Mza3JzU3NlbFRVWnVLb3gKNkhnQUVxVXNMSEc3cVpBYlFKaVlEZ0s5WWdNcWticEltOXd0STlsQUFjdkwwQjZQb0lrcVNRbWpNUDF6akRmYwpiWi9NdVNwWVlISEdTbGhhd1hiWCtRcTNuZ1dIL0IyS0pVeFY5WVJsUlpKVnlndGtZb2VaSnFqYU1iVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: cG93ZXJtYXg=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqSTRNRFZTYTJwaGJrRnROemxyV1VORFdVOVBiVmhyT0hGbmEyRlZXVnBHYm05d2NuTjRaemRNZGxVaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YjNkbGNtMWhlQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUprWldaaGRXeDBMWFJ2YTJWdUxYYzVkREozSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW1SbFptRjFiSFFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUprTm1WbE5HSm1NaTFtWmpaaExUUXdNV010T1dFME5TMW1OVFppTVRZeVlqVTBaamtpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNmNHOTNaWEp0WVhnNlpHVm1ZWFZzZENKOS5NR3hXZ3FGT3RPLWdmNTBjdGhxa3VfeVU3ei1SejVoN0liemJzVXVacDlYTTQ5VkpJNXpFMkhQU1dtMlNDdEdHTGNmVnUzRlU2Q3p6RDg3NE1kRFl6cVMtc2M4b0FUVnRHQnpkOWpEYVNXR2p4bDA5QVhkUG5veEJ5c1J1VEltTklfekd1V3kxNGh4MldTeXZsNXJzN1Y0NWpWQldSNXJMTjFBazJqZGxoNnhmWE0zNnB4b09hZ2lJOUdDdWhDaTVDZ0xKUThqWFhERXhLZ0dqbG9LS3o5VDV3NmdRTFVrUms5TE51QzJGY0xIRGhvM2lNM3Z1UWM0dmJjYVVGbU4xSHhiQzdpazJHT1lDV1cwZnQtcFVjdlNFNkdLSUxuOElxUFdRaUhYbFlGUHZkTWlHLW94bTBmZ0VrVGVYbmJzUDNhY2stc3VkUTNHYmhQdm5FdFhsQmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: d6ee4bf2-ff6a-401c-9a45-f56b162b54f9
    creationTimestamp: "2021-05-12T15:23:00Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-12T15:23:00Z"
    name: default-token-w9t2w
    namespace: powermax
    resourceVersion: "1769557"
    selfLink: /api/v1/namespaces/powermax/secrets/default-token-w9t2w
    uid: d59be028-0445-45da-bcd2-724d3cf10662
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    config: W3sidXNlcm5hbWUiOiItIiwicGFzc3dvcmQiOiItIiwiaW50ZW5kZWRFbmRwb2ludCI6Imh0dHBzOi8vMTAuMC4wLjE6ODQ0MyIsImVuZHBvaW50IjoiaHR0cHM6Ly9sb2NhbGhvc3Q6OTIwMCIsInN5c3RlbUlEIjoiMDEyMzQ1Njc4OTAiLCJpbnNlY3VyZSI6dHJ1ZSwiaXNEZWZhdWx0IjpmYWxzZX1d
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config":"W3sidXNlcm5hbWUiOiItIiwicGFzc3dvcmQiOiItIiwiaW50ZW5kZWRFbmRwb2ludCI6Imh0dHBzOi8vMTAuMC4wLjE6ODQ0MyIsImVuZHBvaW50IjoiaHR0cHM6Ly9sb2NhbGhvc3Q6OTIwMCIsInN5c3RlbUlEIjoiMDEyMzQ1Njc4OTAiLCJpbnNlY3VyZSI6dHJ1ZSwiaXNEZWZhdWx0IjpmYWxzZX1d"},"kind":"Secret","metadata":{"annotations":{},"creationTimestamp":null,"name":"karavi-authorization-config","namespace":"powermax"},"type":"Opaque"}
    creationTimestamp: "2021-05-12T15:40:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:config: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:type: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T15:40:30Z"
    name: karavi-authorization-config
    namespace: powermax
    resourceVersion: "1773173"
    selfLink: /api/v1/namespaces/powermax/secrets/karavi-authorization-config
    uid: ba4712e2-9253-46c7-b196-7ccb46d6afc1
  type: Opaque
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOVEUxTWpFeE5Wb1hEVE14TURVd016RTFNakV4TlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlNKCklQNWpkMzZ4bU5sZUs3MzJjU1BiczlrbGNNUnM3bDFNNVBpZkZHWDVwR05zRVpnc00rV3BGSEpCUEhLWmFlNEcKTlNhK2o1WnNqY2VMclBabmt3bnRUSHkyMGp4d0JRcVJjUEh1ZXF4bHNNaSswaXh5bVd3U1JDMHR3bHN5NWdGegpJU2M3UW1odEwxQjFnVVA3WHd0MkR5cmdPMHpuT21vSGwrRUl3bk5ORUhCbjZTSWxPbUd6bXFIcC9Qbzl5UkRrCnJhTXQwUXhRSGVPOXdJcWRaOC9pdEI2SWhha01zKzBsQ2hZWHlJSFJrakVQUWVmOEkzdUpTbjdpalV5cDBSdWEKSlB0aVBNd2JZdGUrd1lmL0hQVjcvTlhtVEx0ajV4SGlLSkNhaDRxd2pjZGxvNHNEQzNGT0pWZjJnWVRaN3RTSQpyVlRwd1dvc0FzU1lkQlhjbkJjQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHbE5SQURJRW1jbk5CY0h4cUZRK0c2ZnpyejEKUzVZRjBMdW42TEduN3pkQS9uYjgxZkZJYldhb010VFBNcjJQSXdTT0xyaStqTGwwS0dnVm1JZ0tjcjEwSkpWNgpKYUVhdERUdmFpa2haazZ6bC81WnZiZ3FtT1RMRGhtMmJJS0Z0NDQ2OHMyZ3ZZbmNoVVRzYVFXR2owMHZQSGk1ClA0RjdUSGhlcnlaNDZ6dkV2RjNIb0pIUmVSdWdTbDJianFDc3hsWDVINlRqVXJGT2Mza3JzU3NlbFRVWnVLb3gKNkhnQUVxVXNMSEc3cVpBYlFKaVlEZ0s5WWdNcWticEltOXd0STlsQUFjdkwwQjZQb0lrcVNRbWpNUDF6akRmYwpiWi9NdVNwWVlISEdTbGhhd1hiWCtRcTNuZ1dIL0IyS0pVeFY5WVJsUlpKVnlndGtZb2VaSnFqYU1iVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: cG93ZXJtYXg=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqSTRNRFZTYTJwaGJrRnROemxyV1VORFdVOVBiVmhyT0hGbmEyRlZXVnBHYm05d2NuTjRaemRNZGxVaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YjNkbGNtMWhlQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUp3YjNkbGNtMWhlQzFqYjI1MGNtOXNiR1Z5TFhSdmEyVnVMVFp0YkhJMElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVibUZ0WlNJNkluQnZkMlZ5YldGNExXTnZiblJ5YjJ4c1pYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSTJNbVl4Wm1VNU1pMWlPV016TFRSbE1UY3RZbVF3TUMwMk9EZGxNV1l3TVRReVl6RWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2Y0c5M1pYSnRZWGc2Y0c5M1pYSnRZWGd0WTI5dWRISnZiR3hsY2lKOS5FZnR6UHVjaHM3QnlOd1ZQYTJlNWR4X3M4NU5MNXU4YXEwdWFmM2FjQkV5ejlqbzg0WE50a3dWVi1OYm5jWDNnMW5mU0pSUFR2UVNCSjJ5YjNmLU1TS0M1ejhHOUFVSHpkYzIyb2lNVWMzZE02UTE0YWhJR3RmYk91eUxoMDJEWnU1b1BVN3gxbDZXNmRpLWZnTGgwTHhmajhGcXZtV0kxUVhyVTJRTlRuWWFSczZoVjliV2xONUU3aGhCV1Nic0dET3ZwSndlZ2xneklUdlJYdjZnSVZWU0NXMjZnVEZ5MzRJSTV1M1FiRHQzOEs5ek1XYzFxeVVVQVVtclpIbmp1SWd4dzkzc1hWNUdqbzNfYXVXU0N6Yk52MG4tR0xpLTRhTXg0OWRZd0RHbGNlTmF0NjVwZ1REN3gwMXhVVDNNV1ZuY2RRMjh6cnpQRTJMZnhVNk1Eemc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: powermax-controller
      kubernetes.io/service-account.uid: 62f1fe92-b9c3-4e17-bd00-687e1f0142c1
    creationTimestamp: "2021-05-12T20:49:58Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-12T20:49:58Z"
    name: powermax-controller-token-6mlr4
    namespace: powermax
    resourceVersion: "1840292"
    selfLink: /api/v1/namespaces/powermax/secrets/powermax-controller-token-6mlr4
    uid: 25af6fe0-254c-4b81-b6ad-fc0eacf85d3b
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    password: dXNlcm5hbWUK
    username: cGFzc3dvcmQK
  kind: Secret
  metadata:
    creationTimestamp: "2021-05-12T15:26:52Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:password: {}
          f:username: {}
        f:type: {}
      manager: kubectl-create
      operation: Update
      time: "2021-05-12T15:26:52Z"
    name: powermax-creds
    namespace: powermax
    resourceVersion: "1770122"
    selfLink: /api/v1/namespaces/powermax/secrets/powermax-creds
    uid: 6af0d355-b625-4dc9-9692-64f702085def
  type: Opaque
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOVEUxTWpFeE5Wb1hEVE14TURVd016RTFNakV4TlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlNKCklQNWpkMzZ4bU5sZUs3MzJjU1BiczlrbGNNUnM3bDFNNVBpZkZHWDVwR05zRVpnc00rV3BGSEpCUEhLWmFlNEcKTlNhK2o1WnNqY2VMclBabmt3bnRUSHkyMGp4d0JRcVJjUEh1ZXF4bHNNaSswaXh5bVd3U1JDMHR3bHN5NWdGegpJU2M3UW1odEwxQjFnVVA3WHd0MkR5cmdPMHpuT21vSGwrRUl3bk5ORUhCbjZTSWxPbUd6bXFIcC9Qbzl5UkRrCnJhTXQwUXhRSGVPOXdJcWRaOC9pdEI2SWhha01zKzBsQ2hZWHlJSFJrakVQUWVmOEkzdUpTbjdpalV5cDBSdWEKSlB0aVBNd2JZdGUrd1lmL0hQVjcvTlhtVEx0ajV4SGlLSkNhaDRxd2pjZGxvNHNEQzNGT0pWZjJnWVRaN3RTSQpyVlRwd1dvc0FzU1lkQlhjbkJjQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHbE5SQURJRW1jbk5CY0h4cUZRK0c2ZnpyejEKUzVZRjBMdW42TEduN3pkQS9uYjgxZkZJYldhb010VFBNcjJQSXdTT0xyaStqTGwwS0dnVm1JZ0tjcjEwSkpWNgpKYUVhdERUdmFpa2haazZ6bC81WnZiZ3FtT1RMRGhtMmJJS0Z0NDQ2OHMyZ3ZZbmNoVVRzYVFXR2owMHZQSGk1ClA0RjdUSGhlcnlaNDZ6dkV2RjNIb0pIUmVSdWdTbDJianFDc3hsWDVINlRqVXJGT2Mza3JzU3NlbFRVWnVLb3gKNkhnQUVxVXNMSEc3cVpBYlFKaVlEZ0s5WWdNcWticEltOXd0STlsQUFjdkwwQjZQb0lrcVNRbWpNUDF6akRmYwpiWi9NdVNwWVlISEdTbGhhd1hiWCtRcTNuZ1dIL0IyS0pVeFY5WVJsUlpKVnlndGtZb2VaSnFqYU1iVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: cG93ZXJtYXg=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqSTRNRFZTYTJwaGJrRnROemxyV1VORFdVOVBiVmhyT0hGbmEyRlZXVnBHYm05d2NuTjRaemRNZGxVaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp3YjNkbGNtMWhlQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUp3YjNkbGNtMWhlQzF5WlhabGNuTmxjSEp2ZUhrdGRHOXJaVzR0TnpoMGRIY2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2ljRzkzWlhKdFlYZ3RjbVYyWlhKelpYQnliM2g1SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWkdOalpUTm1ObVV0TnpFell5MDBNek15TFRnNFpETXRZems0WVdNd09ESmtOV1l5SWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uQnZkMlZ5YldGNE9uQnZkMlZ5YldGNExYSmxkbVZ5YzJWd2NtOTRlU0o5LkFvVHFKYTBCaU4wS2k3bFFQd2M3Y3p1YWVrbGdTT3J2WUY2QkVoeWRMNXc4c0NUX0RpWXJfZXJxS2ZjSTRxSE9Ec3pvSnN2elFfN2lLeTlRYUxvVm8xa2NvdTVOc3hEenY5b2RjcmhvaXhaUUFfSl9YcXVUYUc1VkFZTzBkMi1WbHh2WHdPMjFEbG16UXU1Y1diS0pnWkgyeU1MY2RJWmVTR2w5QThYSDhfbDZxZ3ctX2dMY1RUa3RaOG52NExxcFJ4b1BmWXRiN3RxY2lYMmpWNG15V1k0cWVYWElQUXZqVVdadlJyY3FUazU3RHptaUFZTXA5QXNISkY0VC0tRncwbUpuUHMzMENvd0xnRmkwUUJlWG90TlBHZW44N1VzVnMwby1BbUo1NVYzUi1oN3BaZjR2cjRHUHZ1M2VlcE80REZ6R2xQbERkRHVMUDNXSm1UdXJ0Zw==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: powermax-reverseproxy
      kubernetes.io/service-account.uid: dcce3f6e-713c-4332-88d3-c98ac082d5f2
    creationTimestamp: "2021-05-12T20:49:58Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-12T20:49:58Z"
    name: powermax-reverseproxy-token-78ttw
    namespace: powermax
    resourceVersion: "1840295"
    selfLink: /api/v1/namespaces/powermax/secrets/powermax-reverseproxy-token-78ttw
    uid: 4c0eb799-1232-47ec-bb76-23217f934f77
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    access: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmhkV1FpT2lKcllYSmhkbWtpTENKbGVIQWlPakUyTWpBNU5USTNOek1zSW1semN5STZJbU52YlM1a1pXeHNMbXRoY21GMmFTSXNJbk4xWWlJNkltdGhjbUYyYVMxMFpXNWhiblFpTENKeWIyeGxjeUk2SWxSbFlTSXNJbWR5YjNWd0lqb2lRMjltWm1WbEluMC4yN19NWjlPdjAzLXJzSzR1bjZQY29GU0JDN2pEYTl4WDFfdm1mWDdqVWJr
    refresh: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmhkV1FpT2lKcllYSmhkbWtpTENKbGVIQWlPakUyTWpNME5EUTNOelFzSW1semN5STZJbU52YlM1a1pXeHNMbXRoY21GMmFTSXNJbk4xWWlJNkltdGhjbUYyYVMxMFpXNWhiblFpTENKeWIyeGxjeUk2SWxSbFlTSXNJbWR5YjNWd0lqb2lRMjltWm1WbEluMC5vWDNSallYWi1JbG5iX0VzeGs4dWpwZWxUSnQyYXFLYWRvRUlkS1ZhRkFr
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"access":"ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmhkV1FpT2lKcllYSmhkbWtpTENKbGVIQWlPakUyTWpBNU5USTNOek1zSW1semN5STZJbU52YlM1a1pXeHNMbXRoY21GMmFTSXNJbk4xWWlJNkltdGhjbUYyYVMxMFpXNWhiblFpTENKeWIyeGxjeUk2SWxSbFlTSXNJbWR5YjNWd0lqb2lRMjltWm1WbEluMC4yN19NWjlPdjAzLXJzSzR1bjZQY29GU0JDN2pEYTl4WDFfdm1mWDdqVWJr","refresh":"ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmhkV1FpT2lKcllYSmhkbWtpTENKbGVIQWlPakUyTWpNME5EUTNOelFzSW1semN5STZJbU52YlM1a1pXeHNMbXRoY21GMmFTSXNJbk4xWWlJNkltdGhjbUYyYVMxMFpXNWhiblFpTENKeWIyeGxjeUk2SWxSbFlTSXNJbWR5YjNWd0lqb2lRMjltWm1WbEluMC5vWDNSallYWi1JbG5iX0VzeGs4dWpwZWxUSnQyYXFLYWRvRUlkS1ZhRkFr"},"kind":"Secret","metadata":{"annotations":{},"name":"proxy-authz-tokens","namespace":"powermax"},"type":"Opaque"}
    creationTimestamp: "2021-05-12T15:30:46Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:access: {}
          f:refresh: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:type: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T20:52:55Z"
    name: proxy-authz-tokens
    namespace: powermax
    resourceVersion: "1841007"
    selfLink: /api/v1/namespaces/powermax/secrets/proxy-authz-tokens
    uid: 9fe96afa-7c4e-465c-bf0f-a9b6d6cc27f0
  type: Opaque
- apiVersion: v1
  data:
    rootCertificate.pem: ""
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"rootCertificate.pem":""},"kind":"Secret","metadata":{"annotations":{},"creationTimestamp":null,"name":"proxy-server-root-certificate","namespace":"powermax"},"type":"Opaque"}
    creationTimestamp: "2021-05-12T15:40:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:rootCertificate.pem: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:type: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T20:52:55Z"
    name: proxy-server-root-certificate
    namespace: powermax
    resourceVersion: "1841015"
    selfLink: /api/v1/namespaces/powermax/secrets/proxy-server-root-certificate
    uid: d4006570-a07b-4680-a879-c36d8880a960
  type: Opaque
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lKQU5LZXJJeGdwNG9ETUEwR0NTcUdTSWIzRFFFQkN3VUFNRUl4Q3pBSkJnTlYKQkFZVEFsaFlNUlV3RXdZRFZRUUhEQXhFWldaaGRXeDBJRU5wZEhreEhEQWFCZ05WQkFvTUUwUmxabUYxYkhRZwpRMjl0Y0dGdWVTQk1kR1F3SGhjTk1qRXdOVEV5TVRreU1ETTVXaGNOTXpFd05URXdNVGt5TURNNVdqQkNNUXN3CkNRWURWUVFHRXdKWVdERVZNQk1HQTFVRUJ3d01SR1ZtWVhWc2RDQkRhWFI1TVJ3d0dnWURWUVFLREJORVpXWmgKZFd4MElFTnZiWEJoYm5rZ1RIUmtNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQQp2V2tFbmRkMEZDL09UNGlDMmFYQWpSZkpuS3JUeUJ5cm5pOVl3N3h3U3ZPRyszdmFaME9US1pNZWkwMG1keHJOClZTcFlTdVg5UTIyakQvQytCVmNuV0p2STdQRzB6VWJnZ0ZzYXV6d0Nnd3pqbWFnakFYUWpEU3RCeTUvZzBwSFMKTUdFVDRuMHVXYlQ0cnVjZThEOStBQ2cyMWVOaG10Q3RjMm8vWEI4RFZyckpCNHlwVk5Pd2sxOU9KTWQ2TVhHQwo0THBQTUVqWE9MWXFUVEVaaUp1b1hMcnBrY3Qyc3A4dVNFTE16NDdHTFFIRHB4Ny83d0wwRlo2Z3BqT3dzMWNqClBEbG9qdi9TWWYrVzdiMENjRVVhd1JIQlYyc0I0RG9BdHZmRGlkUW8wSUhqTy9CSVJlQ21BcHlsbXB3UnNQeXAKK1pRMmtKSWhzL25ZSWI3aGhBWXFrd0lEQVFBQm8xQXdUakFkQmdOVkhRNEVGZ1FVaXc0ajJyRlQ3NHUrMVROSgpuM0kreWNGd1B1MHdId1lEVlIwakJCZ3dGb0FVaXc0ajJyRlQ3NHUrMVROSm4zSSt5Y0Z3UHUwd0RBWURWUjBUCkJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXVmSUpwNHJvaW5XaVdibUVERmxhWUN5ejBvZWEKN2Nja1ZZclFUNHV5c2NwMGwzODdlSXBPSkZOKzdPcFlHQ1daWTFPVWtuUDV1YTF4NVFIQlBJTEVLVkEwaE1LYwp1SThPQ2cxNDM2QTBtRkl6RHd5U2xsNUlPTkFnblVKbVpuZ3FmNWduKzVSbTIxTytadEd6RGFyWVk5K1NRam5ECnB3ZWdXVUY3NU5sSmJ0empMV2haRFpiRkZrR0ZLL2pJcWxHYVRvemtXbWZVaTEwazQ4SXZUMFA3bURGZHNyak8KU3d6T0Z4c2tMUy9XWFNyUGxmQlJXd0N4eEh4K2wyNmFia0ZlUGxHN0pzaWJEeklvN3hYUkJBYTBmR2ZPQmx2WApzVHpnMWNyeUttaWxCQjBnOTlZUGFLN2w3cTkxcTdTeHlWaURqSllGbTJtY21hS0htZnpJZk5NMmNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdldrRW5kZDBGQy9PVDRpQzJhWEFqUmZKbktyVHlCeXJuaTlZdzd4d1N2T0crM3ZhClowT1RLWk1laTAwbWR4ck5WU3BZU3VYOVEyMmpEL0MrQlZjbldKdkk3UEcwelViZ2dGc2F1endDZ3d6am1hZ2oKQVhRakRTdEJ5NS9nMHBIU01HRVQ0bjB1V2JUNHJ1Y2U4RDkrQUNnMjFlTmhtdEN0YzJvL1hCOERWcnJKQjR5cApWTk93azE5T0pNZDZNWEdDNExwUE1FalhPTFlxVFRFWmlKdW9YTHJwa2N0MnNwOHVTRUxNejQ3R0xRSERweDcvCjd3TDBGWjZncGpPd3MxY2pQRGxvanYvU1lmK1c3YjBDY0VVYXdSSEJWMnNCNERvQXR2ZkRpZFFvMElIak8vQkkKUmVDbUFweWxtcHdSc1B5cCtaUTJrSklocy9uWUliN2hoQVlxa3dJREFRQUJBb0lCQUQxNUZneDhYcW9ta2RqeQpQeldRUEJ3T3VscGtmdk9WaW9WK2JGcXFqKzlqZGsyc2RzZkpBTHdmaVd4QWo5bGNFNFF1aUJWVzY0bTB6WlZnCjF1czR6QVpRR1RmOWdtYVZPRXV3UmM2NnZUMzNNdTh0eUo2eUtLWWZnZTBxYUhjdTZIN1hJdk1CR2NmM21qWjUKd0dyTTBJSVFpeXVEN3F1bVNvVUkyS04zVlVnU0svZnpBOHd0NzVlNjJVL2xWSDkzS0hRRFN5azhBdTliUEQrLwpkVFcvdkxzNmQzSFFGS3NlMSthVzRyQWF3Qi8yTkI5cXFIckp6S0lubjFvR1ZsMWhqUiswcWNoS3lOcWZ3VHNFCjg2Zlo4a201NkdKVTJHTmVtSXVxSERHbm0yUmpsV3p6ZEJTNGVlaFJvKzBqVGg3VE9haHp2R2h2RDdOWVRXRG0Kc1B5Z0I1RUNnWUVBNmI2TWI5WGJWU1doZGVsb0ozb1B6cGVaSTVvelNJNWJRdGlERHJHNkp6dmIwbFgwMnIxawoxcndxUGVKVmdjdkF0WjQ1bCtVc1k0UmJCWGxTVlFsNDh2ZWR1Unl5VkFrWWFyMzlLaE9waGlJcGdVYkE3V2VSClhLQVV3dmRvekpyeXpabU1SbEliOHJ3RzBWcGNKU2lyN3dta2ZwMGxnNDk3UVJla1NaMmRtbmNDZ1lFQXozSFcKbTZ0SjlrNzVFbTJCWjAvYXZJMVo1SDh6dzlLbUQxcTcvZ1RTWitQUDBrUUJGdXl3TzFGNDh2clVzWnVOSHAvagpFcDJQdEk0SkVmOE5UdEFTQWlISGdHWThiK2xaT1pYREZqRVJOMUxjOVp2emZVQjIwR2JlU1RMSkxadGVsUzY5Cm95Z2QrVW8vNUJyTnd3NUg2Z3lLWkRSSGVVN3V0TWI5NXNwYVc4VUNnWUVBeVQvQVZvSEFpRDBRR1I5UEI3NDIKWWQ5d2dKREJXdFVHaWpVMEViQy80QXZQcGZkUURBMUpCd0dYTlJUc0hnYTU4eVU1M1NmNTRlMFJHVk50cWIydwpIekZHNFJ4dUJhQ1hIMEJZK3FOWE1CKzFzSktraFVMSWl3RmhIc1E1dlFBajBSVkZDejZpeFlsU0xXb3BMKzBtCnEzYVg1Rk9VK3dMTVVpenl6RmNpWE4wQ2dZRUFvVFdFWThFL1h5eU1IeWYrY2p6NmJhRWpoSkRkdDRaU0NvaW0KbzRjM3hBaWtEbkZPcjNRTW1HeCtJOFdOMk9CYlVMdE1DY0ZzVmhJek5rc1JHbmhVSmxmOTQraVBleURLZUJmTQpYY2lQNm9CNHVsNFJZUHJoMnA2MmpBZnRrNFcwZ1JhcnhNbCtVYWJEOUE1b2JQY0NKLzdLNVloREt5Q09IT3F2CmtkVWJWMGtDZ1lBb0NOOVAwZ1NwZU83Y1lBVVJKQ1lNNjE1aFBFMWJPOHVpUHlzYzd1R1BrUmZha0VabW5IUy8KWHNEZi8rNC8vMGZXaWRlSXBLeUdrREVudHhldmhYeVFkOXhQelVVbGpHK1VCcS8xRzAvcnRZaDhLWVBIYXdnaQpFOWJMc04yQmN5SVhFbVR1dStYNXNTSWxIS2V5cUE2djc4c3RFbUFrcVJoT2NYZmswQ1ZHc2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  kind: Secret
  metadata:
    creationTimestamp: "2021-05-12T15:23:43Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:type: {}
      manager: kubectl-create
      operation: Update
      time: "2021-05-12T15:23:43Z"
    name: revproxy-certs
    namespace: powermax
    resourceVersion: "1769663"
    selfLink: /api/v1/namespaces/powermax/secrets/revproxy-certs
    uid: f0295475-d21c-4870-8c5e-cdd07918fc09
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2021-05-12T20:49:58Z"
    labels:
      modifiedAt: "1620866821"
      name: powermax
      owner: helm
      status: deployed
      version: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:release: {}
        f:metadata:
          f:labels:
            .: {}
            f:modifiedAt: {}
            f:name: {}
            f:owner: {}
            f:status: {}
            f:version: {}
        f:type: {}
      manager: helm
      operation: Update
      time: "2021-05-12T20:49:58Z"
    name: sh.helm.release.v1.powermax.v1
    namespace: powermax
    resourceVersion: "1840328"
    selfLink: /api/v1/namespaces/powermax/secrets/sh.helm.release.v1.powermax.v1
    uid: 72cce2d5-5b12-42bd-8f90-bbfa4d70cf25
  type: helm.sh/release.v1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      com.dell.karavi-authorization-proxy: "true"
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"com.dell.karavi-authorization-proxy":"true","deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"powermax","meta.helm.sh/release-namespace":"powermax"},"creationTimestamp":"2021-05-12T20:49:58Z","generation":1,"labels":{"app.kubernetes.io/managed-by":"Helm"},"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/managed-by":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{"f:matchLabels":{".":{},"f:name":{}}},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:affinity":{".":{},"f:podAntiAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"attacher\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"ADDRESS\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/run/csi\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"driver\"}":{".":{},"f:args":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"CSI_ENDPOINT\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"SSL_CERT_DIR\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_DEBUG\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_GRPC_MAX_THREADS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_IG_MODIFY_HOSTNAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_IG_NODENAME_TEMPLATE\"}":{".":{},"f:name":{}},"k:{\"name\":\"X_CSI_K8S_CLUSTER_PREFIX\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_MODE\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_ARRAYS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_DEBUG\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_DRIVER_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_ENDPOINT\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_INSECURE\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"X_CSI_POWERMAX_PORTGROUPS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_PROXY_SERVICE_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"X_CSI_POWERMAX_VERSION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_ReplicationContextPrefix\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_ReplicationPrefix\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_TRANSPORT_PROTOCOL\"}":{".":{},"f:name":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/var/run/csi\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"provisioner\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"ADDRESS\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/run/csi\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"resizer\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"ADDRESS\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/run/csi\"}":{".":{},"f:mountPath":{},"f:name":{}}}},"k:{\"name\":\"snapshotter\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"ADDRESS\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/run/csi\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"certs\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:optional":{},"f:secretName":{}}},"k:{\"name\":\"socket-dir\"}":{".":{},"f:emptyDir":{},"f:name":{}}}}}}},"manager":"Go-http-client","operation":"Update","time":"2021-05-12T20:49:58Z"},{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-05-12T20:50:01Z"}],"name":"powermax-controller","namespace":"powermax","resourceVersion":"1840404","selfLink":"/apis/apps/v1/namespaces/powermax/deployments/powermax-controller","uid":"864a16d6-7d2f-4d66-bf5d-4707fdae1f63"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"powermax-controller"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"powermax-controller"}},"spec":{"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"name","operator":"In","values":["powermax-controller"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"args":["--csi-address=$(ADDRESS)","--v=5","--timeout=180s","--worker-threads=6","--leader-election"],"env":[{"name":"ADDRESS","value":"/var/run/csi/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"attacher","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/run/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--volume-name-prefix=mich","--volume-name-uuid-length=10","--timeout=180s","--worker-threads=6","--v=5","--default-fstype=ext4","--leader-election","--extra-create-metadata","--feature-gates=Topology=true"],"env":[{"name":"ADDRESS","value":"/var/run/csi/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0","imagePullPolicy":"IfNotPresent","name":"provisioner","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/run/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5","--snapshot-name-prefix=pmsn","--snapshot-name-uuid-length=10","--timeout=180s","--leader-election"],"env":[{"name":"ADDRESS","value":"/var/run/csi/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3","imagePullPolicy":"IfNotPresent","name":"snapshotter","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/run/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--timeout=180s","--v=5","--leader-election"],"env":[{"name":"ADDRESS","value":"/var/run/csi/csi.sock"}],"image":"quay.io/k8scsi/csi-resizer:v1.1.0","imagePullPolicy":"IfNotPresent","name":"resizer","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/run/csi","name":"socket-dir"}]},{"args":["--leader-election"],"command":["/csi-powermax.sh"],"env":[{"name":"X_CSI_POWERMAX_DRIVER_NAME","value":"csi-powermax.dellemc.com"},{"name":"CSI_ENDPOINT","value":"/var/run/csi/csi.sock"},{"name":"X_CSI_MODE","value":"controller"},{"name":"X_CSI_DEBUG","value":"true"},{"name":"X_CSI_POWERMAX_ENDPOINT","value":"https://localhost:9200"},{"name":"X_CSI_POWERMAX_USER","valueFrom":{"secretKeyRef":{"key":"username","name":"powermax-creds"}}},{"name":"X_CSI_POWERMAX_PASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"powermax-creds"}}},{"name":"X_CSI_POWERMAX_VERSION","value":"90"},{"name":"X_CSI_POWERMAX_DEBUG","value":"true"},{"name":"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION","value":"true"},{"name":"X_CSI_POWERMAX_INSECURE","value":"none"},{"name":"X_CSI_POWERMAX_PROXY_SERVICE_NAME","value":"powermax-reverseproxy"},{"name":"X_CSI_POWERMAX_PORTGROUPS","value":"powermax-port-group"},{"name":"X_CSI_K8S_CLUSTER_PREFIX","value":"MIC"},{"name":"X_CSI_POWERMAX_ARRAYS","value":"01234567890"},{"name":"X_CSI_GRPC_MAX_THREADS","value":"50"},{"name":"X_CSI_TRANSPORT_PROTOCOL"},{"name":"SSL_CERT_DIR","value":"/certs"},{"name":"X_CSI_IG_NODENAME_TEMPLATE"},{"name":"X_CSI_IG_MODIFY_HOSTNAME","value":"false"},{"name":"X_CSI_ReplicationContextPrefix","value":"powermax/"},{"name":"X_CSI_ReplicationPrefix","value":"replication.storage.dell.com/"},{"name":"CSM_CSI_POWERMAX_ENDPOINT","value":"https://1.1.1.1:8443"}],"image":"dellemc/csi-powermax:v1.6.0","imagePullPolicy":"Always","name":"driver","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/run/csi","name":"socket-dir"},{"mountPath":"/certs","name":"certs","readOnly":true}]},{"env":[{"name":"PROXY_HOST","value":"proxy-host-domain"},{"name":"INSECURE","value":"true"},{"name":"PLUGIN_IDENTIFIER","value":"powermax"},{"name":"ACCESS_TOKEN","valueFrom":{"secretKeyRef":{"key":"access","name":"proxy-authz-tokens"}}},{"name":"REFRESH_TOKEN","valueFrom":{"secretKeyRef":{"key":"refresh","name":"proxy-authz-tokens"}}}],"image":"docker-registry:1234/sidecar-proxy:latest","imagePullPolicy":"Always","name":"karavi-authorization-proxy","resources":{},"volumeMounts":[{"mountPath":"/etc/karavi-authorization/config","name":"karavi-authorization-config"},{"mountPath":"/etc/karavi-authorization/root-certificates","name":"proxy-server-root-certificate"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"powermax-controller","serviceAccountName":"powermax-controller","terminationGracePeriodSeconds":30,"volumes":[{"emptyDir":{},"name":"socket-dir"},{"name":"certs","secret":{"defaultMode":420,"optional":true,"secretName":"powermax-certs"}},{"name":"karavi-authorization-config","secret":{"secretName":"karavi-authorization-config"}},{"name":"proxy-server-root-certificate","secret":{"secretName":"proxy-server-root-certificate"}}]}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2021-05-12T20:50:01Z","lastUpdateTime":"2021-05-12T20:50:01Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2021-05-12T20:49:58Z","lastUpdateTime":"2021-05-12T20:50:01Z","message":"ReplicaSet \"powermax-controller-ccd499ddb\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":1,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
      meta.helm.sh/release-name: powermax
      meta.helm.sh/release-namespace: powermax
    creationTimestamp: "2021-05-12T20:49:58Z"
    generation: 3
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:name: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"attacher"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"driver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CSI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SSL_CERT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_GRPC_MAX_THREADS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_MODIFY_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_NODENAME_TEMPLATE"}:
                      .: {}
                      f:name: {}
                    k:{"name":"X_CSI_K8S_CLUSTER_PREFIX"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ARRAYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DRIVER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"X_CSI_POWERMAX_INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_POWERMAX_PORTGROUPS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_PROXY_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_POWERMAX_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_ReplicationContextPrefix"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_ReplicationPrefix"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_TRANSPORT_PROTOCOL"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"provisioner"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"resizer"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"snapshotter"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"socket-dir"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: Go-http-client
      operation: Update
      time: "2021-05-12T20:49:58Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:com.dell.karavi-authorization-proxy: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
            f:spec:
              f:containers:
                k:{"name":"driver"}:
                  f:env:
                    k:{"name":"CSM_CSI_POWERMAX_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ENDPOINT"}:
                      f:value: {}
                k:{"name":"karavi-authorization-proxy"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCESS_TOKEN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IDENTIFIER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PROXY_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REFRESH_TOKEN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/karavi-authorization/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/karavi-authorization/root-certificates"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:volumes:
                k:{"name":"karavi-authorization-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"proxy-server-root-certificate"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T20:52:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-12T20:53:06Z"
    name: powermax-controller
    namespace: powermax
    resourceVersion: "1841248"
    selfLink: /apis/apps/v1/namespaces/powermax/deployments/powermax-controller
    uid: 864a16d6-7d2f-4d66-bf5d-4707fdae1f63
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: powermax-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-05-12T16:52:56-04:00"
        creationTimestamp: null
        labels:
          name: powermax-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - powermax-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          - --timeout=180s
          - --worker-threads=6
          - --leader-election
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --volume-name-prefix=mich
          - --volume-name-uuid-length=10
          - --timeout=180s
          - --worker-threads=6
          - --v=5
          - --default-fstype=ext4
          - --leader-election
          - --extra-create-metadata
          - --feature-gates=Topology=true
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0
          imagePullPolicy: IfNotPresent
          name: provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          - --snapshot-name-prefix=pmsn
          - --snapshot-name-uuid-length=10
          - --timeout=180s
          - --leader-election
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
          imagePullPolicy: IfNotPresent
          name: snapshotter
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --timeout=180s
          - --v=5
          - --leader-election
          env:
          - name: ADDRESS
            value: /var/run/csi/csi.sock
          image: quay.io/k8scsi/csi-resizer:v1.1.0
          imagePullPolicy: IfNotPresent
          name: resizer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
        - args:
          - --leader-election
          command:
          - /csi-powermax.sh
          env:
          - name: X_CSI_POWERMAX_DRIVER_NAME
            value: csi-powermax.dellemc.com
          - name: CSI_ENDPOINT
            value: /var/run/csi/csi.sock
          - name: X_CSI_MODE
            value: controller
          - name: X_CSI_DEBUG
            value: "true"
          - name: X_CSI_POWERMAX_ENDPOINT
            value: https://localhost:9200
          - name: X_CSI_POWERMAX_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: powermax-creds
          - name: X_CSI_POWERMAX_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: powermax-creds
          - name: X_CSI_POWERMAX_VERSION
            value: "90"
          - name: X_CSI_POWERMAX_DEBUG
            value: "true"
          - name: X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION
            value: "true"
          - name: X_CSI_POWERMAX_INSECURE
            value: none
          - name: X_CSI_POWERMAX_PROXY_SERVICE_NAME
            value: powermax-reverseproxy
          - name: X_CSI_POWERMAX_PORTGROUPS
            value: powermax-port-group
          - name: X_CSI_K8S_CLUSTER_PREFIX
            value: MIC
          - name: X_CSI_POWERMAX_ARRAYS
            value: "01234567890"
          - name: X_CSI_GRPC_MAX_THREADS
            value: "50"
          - name: X_CSI_TRANSPORT_PROTOCOL
          - name: SSL_CERT_DIR
            value: /certs
          - name: X_CSI_IG_NODENAME_TEMPLATE
          - name: X_CSI_IG_MODIFY_HOSTNAME
            value: "false"
          - name: X_CSI_ReplicationContextPrefix
            value: powermax/
          - name: X_CSI_ReplicationPrefix
            value: replication.storage.dell.com/
          - name: CSM_CSI_POWERMAX_ENDPOINT
            value: https://1.1.1.1:8443
          image: dellemc/csi-powermax:v1.6.0
          imagePullPolicy: Always
          name: driver
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/csi
            name: socket-dir
          - mountPath: /certs
            name: certs
            readOnly: true
        - env:
          - name: PROXY_HOST
            value: proxy-host-domain
          - name: INSECURE
            value: "true"
          - name: PLUGIN_IDENTIFIER
            value: powermax
          - name: ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: access
                name: proxy-authz-tokens
          - name: REFRESH_TOKEN
            valueFrom:
              secretKeyRef:
                key: refresh
                name: proxy-authz-tokens
          image: docker-registry:1234/sidecar-proxy:latest
          imagePullPolicy: Always
          name: karavi-authorization-proxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/karavi-authorization/config
            name: karavi-authorization-config
          - mountPath: /etc/karavi-authorization/root-certificates
            name: proxy-server-root-certificate
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: powermax-controller
        serviceAccountName: powermax-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - name: certs
          secret:
            defaultMode: 420
            optional: true
            secretName: powermax-certs
        - name: karavi-authorization-config
          secret:
            defaultMode: 420
            secretName: karavi-authorization-config
        - name: proxy-server-root-certificate
          secret:
            defaultMode: 420
            secretName: proxy-server-root-certificate
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-05-12T20:50:01Z"
      lastUpdateTime: "2021-05-12T20:50:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-05-12T20:49:58Z"
      lastUpdateTime: "2021-05-12T20:53:06Z"
      message: ReplicaSet "powermax-controller-f7d547585" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      com.dell.karavi-authorization-proxy: "true"
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"com.dell.karavi-authorization-proxy":"true","deployment.kubernetes.io/revision":"1","meta.helm.sh/release-name":"powermax","meta.helm.sh/release-namespace":"powermax"},"creationTimestamp":"2021-05-12T20:49:58Z","generation":1,"labels":{"app.kubernetes.io/managed-by":"Helm"},"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/managed-by":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{"f:matchLabels":{".":{},"f:name":{}}},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"csireverseproxy\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"X_CSI_REVPROXY_CONFIG_DIR\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_REVPROXY_CONFIG_FILE_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_REVPROXY_TLS_CERT_DIR\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_REVPROXY_WATCH_NAMESPACE\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_REVRPOXY_IN_CLUSTER\"}":{".":{},"f:name":{},"f:value":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/app/certs\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/app/tls\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/etc/config/configmap\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:serviceAccount":{},"f:serviceAccountName":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"cert-dir\"}":{".":{},"f:emptyDir":{},"f:name":{}},"k:{\"name\":\"configmap-volume\"}":{".":{},"f:configMap":{".":{},"f:defaultMode":{},"f:name":{},"f:optional":{}},"f:name":{}},"k:{\"name\":\"tls-secret\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:secretName":{}}}}}}}},"manager":"Go-http-client","operation":"Update","time":"2021-05-12T20:49:58Z"},{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-05-12T20:50:01Z"}],"name":"powermax-reverseproxy","namespace":"powermax","resourceVersion":"1840393","selfLink":"/apis/apps/v1/namespaces/powermax/deployments/powermax-reverseproxy","uid":"c307a216-6796-453e-9974-d6b732654200"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"powermax-reverseproxy"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"powermax-reverseproxy"}},"spec":{"containers":[{"env":[{"name":"X_CSI_REVPROXY_CONFIG_DIR","value":"/etc/config/configmap"},{"name":"X_CSI_REVPROXY_CONFIG_FILE_NAME","value":"config.yaml"},{"name":"X_CSI_REVRPOXY_IN_CLUSTER","value":"true"},{"name":"X_CSI_REVPROXY_TLS_CERT_DIR","value":"/app/tls"},{"name":"X_CSI_REVPROXY_WATCH_NAMESPACE","value":"powermax"}],"image":"dellemc/csipowermax-reverseproxy:v1.2.0","imagePullPolicy":"Always","name":"csireverseproxy","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/config/configmap","name":"configmap-volume"},{"mountPath":"/app/tls","name":"tls-secret"},{"mountPath":"/app/certs","name":"cert-dir"}]},{"env":[{"name":"PROXY_HOST","value":"proxy-host-domain"},{"name":"INSECURE","value":"true"},{"name":"PLUGIN_IDENTIFIER","value":"powermax"},{"name":"ACCESS_TOKEN","valueFrom":{"secretKeyRef":{"key":"access","name":"proxy-authz-tokens"}}},{"name":"REFRESH_TOKEN","valueFrom":{"secretKeyRef":{"key":"refresh","name":"proxy-authz-tokens"}}}],"image":"docker-registry:1234/sidecar-proxy:latest","imagePullPolicy":"Always","name":"karavi-authorization-proxy","resources":{},"volumeMounts":[{"mountPath":"/etc/karavi-authorization/config","name":"karavi-authorization-config"},{"mountPath":"/etc/karavi-authorization/root-certificates","name":"proxy-server-root-certificate"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"powermax-reverseproxy","serviceAccountName":"powermax-reverseproxy","terminationGracePeriodSeconds":30,"volumes":[{"configMap":{"defaultMode":420,"name":"powermax-reverseproxy-config","optional":true},"name":"configmap-volume"},{"name":"tls-secret","secret":{"defaultMode":420,"secretName":"csirevproxy-tls-secret"}},{"emptyDir":{},"name":"cert-dir"},{"name":"karavi-authorization-config","secret":{"secretName":"karavi-authorization-config"}},{"name":"proxy-server-root-certificate","secret":{"secretName":"proxy-server-root-certificate"}}]}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2021-05-12T20:50:01Z","lastUpdateTime":"2021-05-12T20:50:01Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2021-05-12T20:49:58Z","lastUpdateTime":"2021-05-12T20:50:01Z","message":"ReplicaSet \"powermax-reverseproxy-69578499c5\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":1,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
      meta.helm.sh/release-name: powermax
      meta.helm.sh/release-namespace: powermax
    creationTimestamp: "2021-05-12T20:49:58Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:name: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              f:containers:
                k:{"name":"csireverseproxy"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"X_CSI_REVPROXY_CONFIG_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_REVPROXY_CONFIG_FILE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_REVPROXY_TLS_CERT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_REVPROXY_WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_REVRPOXY_IN_CLUSTER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/app/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/app/tls"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/config/configmap"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"cert-dir"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"configmap-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"tls-secret"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: Go-http-client
      operation: Update
      time: "2021-05-12T20:49:58Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:com.dell.karavi-authorization-proxy: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"karavi-authorization-proxy"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCESS_TOKEN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IDENTIFIER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PROXY_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REFRESH_TOKEN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/karavi-authorization/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/karavi-authorization/root-certificates"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:volumes:
                k:{"name":"karavi-authorization-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"proxy-server-root-certificate"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T20:52:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-12T20:52:58Z"
    name: powermax-reverseproxy
    namespace: powermax
    resourceVersion: "1841136"
    selfLink: /apis/apps/v1/namespaces/powermax/deployments/powermax-reverseproxy
    uid: c307a216-6796-453e-9974-d6b732654200
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: powermax-reverseproxy
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: powermax-reverseproxy
      spec:
        containers:
        - env:
          - name: X_CSI_REVPROXY_CONFIG_DIR
            value: /etc/config/configmap
          - name: X_CSI_REVPROXY_CONFIG_FILE_NAME
            value: config.yaml
          - name: X_CSI_REVRPOXY_IN_CLUSTER
            value: "true"
          - name: X_CSI_REVPROXY_TLS_CERT_DIR
            value: /app/tls
          - name: X_CSI_REVPROXY_WATCH_NAMESPACE
            value: powermax
          image: dellemc/csipowermax-reverseproxy:v1.2.0
          imagePullPolicy: Always
          name: csireverseproxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/configmap
            name: configmap-volume
          - mountPath: /app/tls
            name: tls-secret
          - mountPath: /app/certs
            name: cert-dir
        - env:
          - name: PROXY_HOST
            value: proxy-host-domain
          - name: INSECURE
            value: "true"
          - name: PLUGIN_IDENTIFIER
            value: powermax
          - name: ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: access
                name: proxy-authz-tokens
          - name: REFRESH_TOKEN
            valueFrom:
              secretKeyRef:
                key: refresh
                name: proxy-authz-tokens
          image: docker-registry:1234/sidecar-proxy:latest
          imagePullPolicy: Always
          name: karavi-authorization-proxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/karavi-authorization/config
            name: karavi-authorization-config
          - mountPath: /etc/karavi-authorization/root-certificates
            name: proxy-server-root-certificate
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: powermax-reverseproxy
        serviceAccountName: powermax-reverseproxy
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: powermax-reverseproxy-config
            optional: true
          name: configmap-volume
        - name: tls-secret
          secret:
            defaultMode: 420
            secretName: csirevproxy-tls-secret
        - emptyDir: {}
          name: cert-dir
        - name: karavi-authorization-config
          secret:
            defaultMode: 420
            secretName: karavi-authorization-config
        - name: proxy-server-root-certificate
          secret:
            defaultMode: 420
            secretName: proxy-server-root-certificate
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-05-12T20:50:01Z"
      lastUpdateTime: "2021-05-12T20:50:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-05-12T20:49:58Z"
      lastUpdateTime: "2021-05-12T20:52:58Z"
      message: ReplicaSet "powermax-reverseproxy-5f84db7f59" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      com.dell.karavi-authorization-proxy: "true"
      deprecated.daemonset.template.generation: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"com.dell.karavi-authorization-proxy":"true","deprecated.daemonset.template.generation":"1","meta.helm.sh/release-name":"powermax","meta.helm.sh/release-namespace":"powermax"},"creationTimestamp":"2021-05-12T20:49:58Z","generation":1,"labels":{"app.kubernetes.io/managed-by":"Helm"},"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:deprecated.daemonset.template.generation":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/managed-by":{}}},"f:spec":{"f:revisionHistoryLimit":{},"f:selector":{"f:matchLabels":{".":{},"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"driver\"}":{".":{},"f:command":{},"f:env":{".":{},"k:{\"name\":\"CSI_ENDPOINT\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"SSL_CERT_DIR\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_DEBUG\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_GRPC_MAX_THREADS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_IG_MODIFY_HOSTNAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_IG_NODENAME_TEMPLATE\"}":{".":{},"f:name":{}},"k:{\"name\":\"X_CSI_ISCSI_CHROOT\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_K8S_CLUSTER_PREFIX\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_MODE\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_ARRAYS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_DEBUG\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_DRIVER_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_ENDPOINT\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_INSECURE\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_ISCSI_ENABLE_CHAP\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_NODENAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}},"k:{\"name\":\"X_CSI_POWERMAX_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"X_CSI_POWERMAX_PORTGROUPS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_PROXY_SERVICE_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_POWERMAX_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"X_CSI_PRIVATE_MOUNT_DIR\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"X_CSI_TRANSPORT_PROTOCOL\"}":{".":{},"f:name":{}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{".":{},"f:allowPrivilegeEscalation":{},"f:capabilities":{".":{},"f:add":{}},"f:privileged":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/dev\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/noderoot\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/run/dbus/system_bus_socket\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/sys\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices\"}":{".":{},"f:mountPath":{},"f:mountPropagation":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/kubelet/plugins/powermax.emc.dell.com\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/kubelet/pods\"}":{".":{},"f:mountPath":{},"f:mountPropagation":{},"f:name":{}}}},"k:{\"name\":\"registrar\"}":{".":{},"f:args":{},"f:env":{".":{},"k:{\"name\":\"ADDRESS\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"KUBE_NODE_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:fieldRef":{".":{},"f:apiVersion":{},"f:fieldPath":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/csi\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/registration\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:hostIPC":{},"f:hostNetwork":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"certs\"}":{".":{},"f:name":{},"f:secret":{".":{},"f:defaultMode":{},"f:optional":{},"f:secretName":{}}},"k:{\"name\":\"dbus-socket\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"dev\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"driver-path\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"noderoot\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"pods-path\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"registration-dir\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"sys\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"volumedevices-path\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}},"f:updateStrategy":{"f:rollingUpdate":{".":{},"f:maxUnavailable":{}},"f:type":{}}}},"manager":"Go-http-client","operation":"Update","time":"2021-05-12T20:49:58Z"},{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:currentNumberScheduled":{},"f:desiredNumberScheduled":{},"f:numberAvailable":{},"f:numberReady":{},"f:observedGeneration":{},"f:updatedNumberScheduled":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2021-05-12T20:50:01Z"}],"name":"powermax-node","namespace":"powermax","resourceVersion":"1840395","selfLink":"/apis/apps/v1/namespaces/powermax/daemonsets/powermax-node","uid":"1ce12130-5d60-46a4-8102-e2900340c411"},"spec":{"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"powermax-node"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"powermax-node"}},"spec":{"containers":[{"command":["/csi-powermax.sh"],"env":[{"name":"X_CSI_POWERMAX_DRIVER_NAME","value":"csi-powermax.dellemc.com"},{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/powermax.emc.dell.com/csi_sock"},{"name":"X_CSI_MODE","value":"node"},{"name":"X_CSI_DEBUG","value":"true"},{"name":"X_CSI_PRIVATE_MOUNT_DIR","value":"/var/lib/kubelet/plugins/powermax.emc.dell.com/disks"},{"name":"X_CSI_POWERMAX_ENDPOINT","value":"https://localhost:9200"},{"name":"X_CSI_POWERMAX_DEBUG","value":"true"},{"name":"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION","value":"true"},{"name":"X_CSI_POWERMAX_INSECURE","value":"none"},{"name":"X_CSI_K8S_CLUSTER_PREFIX","value":"MIC"},{"name":"X_CSI_POWERMAX_USER","valueFrom":{"secretKeyRef":{"key":"username","name":"powermax-creds"}}},{"name":"X_CSI_POWERMAX_PASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"powermax-creds"}}},{"name":"X_CSI_POWERMAX_NODENAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"X_CSI_POWERMAX_ISCSI_ENABLE_CHAP","value":"false"},{"name":"X_CSI_POWERMAX_ARRAYS","value":"01234567890"},{"name":"X_CSI_POWERMAX_PROXY_SERVICE_NAME","value":"powermax-reverseproxy"},{"name":"X_CSI_ISCSI_CHROOT","value":"/noderoot"},{"name":"X_CSI_GRPC_MAX_THREADS","value":"50"},{"name":"X_CSI_TRANSPORT_PROTOCOL"},{"name":"SSL_CERT_DIR","value":"/certs"},{"name":"X_CSI_IG_NODENAME_TEMPLATE"},{"name":"X_CSI_IG_MODIFY_HOSTNAME","value":"false"},{"name":"X_CSI_POWERMAX_PORTGROUPS","value":"powermax-port-group"}],"image":"dellemc/csi-powermax:v1.6.0","imagePullPolicy":"Always","name":"driver","resources":{},"securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/powermax.emc.dell.com","name":"driver-path"},{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices","mountPropagation":"Bidirectional","name":"volumedevices-path"},{"mountPath":"/var/lib/kubelet/pods","mountPropagation":"Bidirectional","name":"pods-path"},{"mountPath":"/dev","name":"dev"},{"mountPath":"/sys","name":"sys"},{"mountPath":"/noderoot","name":"noderoot"},{"mountPath":"/certs","name":"certs","readOnly":true},{"mountPath":"/run/dbus/system_bus_socket","name":"dbus-socket"}]},{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=/var/lib/kubelet/plugins/powermax.emc.dell.com/csi_sock"],"env":[{"name":"ADDRESS","value":"/csi/csi_sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","imagePullPolicy":"IfNotPresent","name":"registrar","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/registration","name":"registration-dir"},{"mountPath":"/csi","name":"driver-path"}]},{"env":[{"name":"PROXY_HOST","value":"proxy-host-domain"},{"name":"INSECURE","value":"true"},{"name":"PLUGIN_IDENTIFIER","value":"powermax"},{"name":"ACCESS_TOKEN","valueFrom":{"secretKeyRef":{"key":"access","name":"proxy-authz-tokens"}}},{"name":"REFRESH_TOKEN","valueFrom":{"secretKeyRef":{"key":"refresh","name":"proxy-authz-tokens"}}}],"image":"docker-registry:1234/sidecar-proxy:latest","imagePullPolicy":"Always","name":"karavi-authorization-proxy","resources":{},"volumeMounts":[{"mountPath":"/etc/karavi-authorization/config","name":"karavi-authorization-config"},{"mountPath":"/etc/karavi-authorization/root-certificates","name":"proxy-server-root-certificate"}]}],"dnsPolicy":"ClusterFirstWithHostNet","hostIPC":true,"hostNetwork":true,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"tolerations":[{"effect":"NoExecute","key":"node.kubernetes.io/memory-pressure","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/disk-pressure","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/network-unavailable","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/powermax.emc.dell.com","type":"DirectoryOrCreate"},"name":"driver-path"},{"hostPath":{"path":"/var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices","type":"DirectoryOrCreate"},"name":"volumedevices-path"},{"hostPath":{"path":"/var/lib/kubelet/pods","type":"Directory"},"name":"pods-path"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"dev"},{"hostPath":{"path":"/sys","type":"Directory"},"name":"sys"},{"hostPath":{"path":"/","type":"Directory"},"name":"noderoot"},{"hostPath":{"path":"/run/dbus/system_bus_socket","type":"Socket"},"name":"dbus-socket"},{"name":"certs","secret":{"defaultMode":420,"optional":true,"secretName":"powermax-certs"}},{"name":"karavi-authorization-config","secret":{"secretName":"karavi-authorization-config"}},{"name":"proxy-server-root-certificate","secret":{"secretName":"proxy-server-root-certificate"}}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}},"status":{"currentNumberScheduled":2,"desiredNumberScheduled":2,"numberAvailable":2,"numberMisscheduled":0,"numberReady":2,"observedGeneration":1,"updatedNumberScheduled":2}}
      meta.helm.sh/release-name: powermax
      meta.helm.sh/release-namespace: powermax
    creationTimestamp: "2021-05-12T20:49:58Z"
    generation: 3
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"driver"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"CSI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SSL_CERT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_GRPC_MAX_THREADS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_MODIFY_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_IG_NODENAME_TEMPLATE"}:
                      .: {}
                      f:name: {}
                    k:{"name":"X_CSI_ISCSI_CHROOT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_K8S_CLUSTER_PREFIX"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ARRAYS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_DRIVER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ENDPOINT"}:
                      .: {}
                      f:name: {}
                    k:{"name":"X_CSI_POWERMAX_INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_ISCSI_ENABLE_CHAP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_NODENAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"X_CSI_POWERMAX_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_POWERMAX_PORTGROUPS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_PROXY_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_POWERMAX_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"X_CSI_PRIVATE_MOUNT_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"X_CSI_TRANSPORT_PROTOCOL"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/noderoot"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/run/dbus/system_bus_socket"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/sys"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/plugins/powermax.emc.dell.com"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/pods"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                k:{"name":"registrar"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBE_NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/registration"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostIPC: {}
              f:hostNetwork: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"dbus-socket"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"dev"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"driver-path"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"noderoot"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"pods-path"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"registration-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"sys"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"volumedevices-path"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: Go-http-client
      operation: Update
      time: "2021-05-12T20:49:58Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:com.dell.karavi-authorization-proxy: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
            f:spec:
              f:containers:
                k:{"name":"driver"}:
                  f:env:
                    k:{"name":"X_CSI_POWERMAX_ENDPOINT"}:
                      f:value: {}
                k:{"name":"karavi-authorization-proxy"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCESS_TOKEN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"INSECURE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PLUGIN_IDENTIFIER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"PROXY_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REFRESH_TOKEN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/karavi-authorization/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/karavi-authorization/root-certificates"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:volumes:
                k:{"name":"karavi-authorization-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"proxy-server-root-certificate"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T20:52:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-12T20:53:04Z"
    name: powermax-node
    namespace: powermax
    resourceVersion: "1841211"
    selfLink: /apis/apps/v1/namespaces/powermax/daemonsets/powermax-node
    uid: 1ce12130-5d60-46a4-8102-e2900340c411
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: powermax-node
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-05-12T16:52:56-04:00"
        creationTimestamp: null
        labels:
          app: powermax-node
      spec:
        containers:
        - command:
          - /csi-powermax.sh
          env:
          - name: X_CSI_POWERMAX_DRIVER_NAME
            value: csi-powermax.dellemc.com
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/powermax.emc.dell.com/csi_sock
          - name: X_CSI_MODE
            value: node
          - name: X_CSI_DEBUG
            value: "true"
          - name: X_CSI_PRIVATE_MOUNT_DIR
            value: /var/lib/kubelet/plugins/powermax.emc.dell.com/disks
          - name: X_CSI_POWERMAX_ENDPOINT
            value: https://localhost:9200
          - name: X_CSI_POWERMAX_DEBUG
            value: "true"
          - name: X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION
            value: "true"
          - name: X_CSI_POWERMAX_INSECURE
            value: none
          - name: X_CSI_K8S_CLUSTER_PREFIX
            value: MIC
          - name: X_CSI_POWERMAX_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: powermax-creds
          - name: X_CSI_POWERMAX_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: powermax-creds
          - name: X_CSI_POWERMAX_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: X_CSI_POWERMAX_ISCSI_ENABLE_CHAP
            value: "false"
          - name: X_CSI_POWERMAX_ARRAYS
            value: "01234567890"
          - name: X_CSI_POWERMAX_PROXY_SERVICE_NAME
            value: powermax-reverseproxy
          - name: X_CSI_ISCSI_CHROOT
            value: /noderoot
          - name: X_CSI_GRPC_MAX_THREADS
            value: "50"
          - name: X_CSI_TRANSPORT_PROTOCOL
          - name: SSL_CERT_DIR
            value: /certs
          - name: X_CSI_IG_NODENAME_TEMPLATE
          - name: X_CSI_IG_MODIFY_HOSTNAME
            value: "false"
          - name: X_CSI_POWERMAX_PORTGROUPS
            value: powermax-port-group
          image: dellemc/csi-powermax:v1.6.0
          imagePullPolicy: Always
          name: driver
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/powermax.emc.dell.com
            name: driver-path
          - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices
            mountPropagation: Bidirectional
            name: volumedevices-path
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: pods-path
          - mountPath: /dev
            name: dev
          - mountPath: /sys
            name: sys
          - mountPath: /noderoot
            name: noderoot
          - mountPath: /certs
            name: certs
            readOnly: true
          - mountPath: /run/dbus/system_bus_socket
            name: dbus-socket
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=/var/lib/kubelet/plugins/powermax.emc.dell.com/csi_sock
          env:
          - name: ADDRESS
            value: /csi/csi_sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /registration
            name: registration-dir
          - mountPath: /csi
            name: driver-path
        - env:
          - name: PROXY_HOST
            value: proxy-host-domain
          - name: INSECURE
            value: "true"
          - name: PLUGIN_IDENTIFIER
            value: powermax
          - name: ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: access
                name: proxy-authz-tokens
          - name: REFRESH_TOKEN
            valueFrom:
              secretKeyRef:
                key: refresh
                name: proxy-authz-tokens
          image: docker-registry:1234/sidecar-proxy:latest
          imagePullPolicy: Always
          name: karavi-authorization-proxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/karavi-authorization/config
            name: karavi-authorization-config
          - mountPath: /etc/karavi-authorization/root-certificates
            name: proxy-server-root-certificate
        dnsPolicy: ClusterFirstWithHostNet
        hostIPC: true
        hostNetwork: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/memory-pressure
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/disk-pressure
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/network-unavailable
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/powermax.emc.dell.com
            type: DirectoryOrCreate
          name: driver-path
        - hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices
            type: DirectoryOrCreate
          name: volumedevices-path
        - hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
          name: pods-path
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /
            type: Directory
          name: noderoot
        - hostPath:
            path: /run/dbus/system_bus_socket
            type: Socket
          name: dbus-socket
        - name: certs
          secret:
            defaultMode: 420
            optional: true
            secretName: powermax-certs
        - name: karavi-authorization-config
          secret:
            defaultMode: 420
            secretName: karavi-authorization-config
        - name: proxy-server-root-certificate
          secret:
            defaultMode: 420
            secretName: proxy-server-root-certificate
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 3
    updatedNumberScheduled: 2
- apiVersion: v1
  data:
    config.yaml: |
      mode: Linked
      port: 2222
      linkConfig:
        primary:
          url: https://localhost:9200
          skipCertificateValidation: true
          certSecret:
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.yaml":"mode: Linked\nport: 2222\nlinkConfig:\n  primary:\n    url: https://localhost:9200\n    skipCertificateValidation: true\n    certSecret:\n"},"kind":"ConfigMap","metadata":{"annotations":{"meta.helm.sh/release-name":"powermax","meta.helm.sh/release-namespace":"powermax"},"creationTimestamp":"2021-05-12T20:49:58Z","labels":{"app.kubernetes.io/managed-by":"Helm"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:config.yaml":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/managed-by":{}}}},"manager":"Go-http-client","operation":"Update","time":"2021-05-12T20:49:58Z"}],"name":"powermax-reverseproxy-config","namespace":"powermax","resourceVersion":"1840291","selfLink":"/api/v1/namespaces/powermax/configmaps/powermax-reverseproxy-config","uid":"2e2f0511-9bb4-4e39-9f63-eb97b4758644"}}
      meta.helm.sh/release-name: powermax
      meta.helm.sh/release-namespace: powermax
    creationTimestamp: "2021-05-12T20:49:58Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
      manager: Go-http-client
      operation: Update
      time: "2021-05-12T20:49:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:config.yaml: {}
        f:metadata:
          f:annotations:
            f:kubectl.kubernetes.io/last-applied-configuration: {}
      manager: kubectl
      operation: Update
      time: "2021-05-12T20:52:56Z"
    name: powermax-reverseproxy-config
    namespace: powermax
    resourceVersion: "1841027"
    selfLink: /api/v1/namespaces/powermax/configmaps/powermax-reverseproxy-config
    uid: 2e2f0511-9bb4-4e39-9f63-eb97b4758644
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
